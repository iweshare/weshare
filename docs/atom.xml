<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>WeShare</title>
  
  
  <link href="/weshare/atom.xml" rel="self"/>
  
  <link href="http://www.slicloud.com:38876/"/>
  <updated>2020-03-23T10:01:49.944Z</updated>
  <id>http://www.slicloud.com:38876/</id>
  
  <author>
    <name>imuxin</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>二分法及其应用</title>
    <link href="http://www.slicloud.com:38876/2020/02/20/%E4%BA%8C%E5%88%86%E6%B3%95%E5%8F%8A%E5%85%B6%E5%BA%94%E7%94%A8/"/>
    <id>http://www.slicloud.com:38876/2020/02/20/二分法及其应用/</id>
    <published>2020-02-20T13:29:13.000Z</published>
    <updated>2020-03-23T10:01:49.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="A-sample"><a href="#A-sample" class="headerlink" title="A sample"></a>A sample</h2><p>在聚餐的酒席上，我们经常会玩一个游戏，随机一人写下0到100间的一个数字N，其他人轮流报一个数字，让区间逐步逼近数字N，直到叫到N的人喝酒。其中会有人去中间数字快速缩小范围。</p><h2 id="Definition"><a href="#Definition" class="headerlink" title="Definition"></a>Definition</h2><p>对于区间[a，b]上连续不断且f（a）·f（b）&lt;0的函数y=f（x），通过不断地把函数f（x）的零点所在的区间一分为二，使区间的两个端点逐步逼近零点，进而得到零点近似值的方法叫二分法。</p><a id="more"></a><p><img src="bisection_method.png" alt="Bisection_method"></p><h2 id="Application-scene"><a href="#Application-scene" class="headerlink" title="Application scene"></a>Application scene</h2><h3 id="Binary-search"><a href="#Binary-search" class="headerlink" title="Binary search"></a>Binary search</h3><ul><li><p>Description:<br>  将n个元素的单调数列，二等分两个区间，剔除没有目标元素的区间，继续等分区间查找，直到锁定目标元素或者区间不能再划分。</p></li><li><p>Algorithm:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search</span><span class="params">(arr, start, end, key)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> start &gt; end:</span><br><span class="line">        <span class="keyword">raise</span> Exception(<span class="string">'NotFound: %s'</span> % key)</span><br><span class="line">    mid = start + (end - start) / <span class="number">2</span></span><br><span class="line">    <span class="keyword">if</span> arr[mid] &gt; key:</span><br><span class="line">        <span class="keyword">return</span> binary_search(arr, start, mid<span class="number">-1</span>, key)</span><br><span class="line">    <span class="keyword">if</span> arr[mid] &lt; key:</span><br><span class="line">        <span class="keyword">return</span> binary_search(arr, mid+<span class="number">1</span>, end, key)</span><br><span class="line">    <span class="keyword">return</span> mid</span><br></pre></td></tr></table></figure></li><li><p>Conclusion:</p></li></ul><h3 id="Binary-insertion-sort"><a href="#Binary-insertion-sort" class="headerlink" title="Binary insertion sort"></a>Binary insertion sort</h3><ul><li><p>Description:<br> Insert sort: 将n个元素的数列分为已有序和无序两个部分，每次处理就是将无序数列的第一个元素与有序数列的元素从后往前<code>逐个</code>进行比较，找出插入位置，将该元素插入到有序数列的合适位置中。<br> Binary insertion sort: 将n个元素的数列分为已有序和无序两个部分，每次处理就是将无序数列的第一个元素与有序数列的元素从后往前<code>二分</code>进行比较，找出插入位置，将该元素插入到有序数列的合适位置中。</p></li><li><p>Algorithm:<br><img src="sort-insert-01.gif" alt="insertion sort"></p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_search</span><span class="params">(collection, key)</span>:</span></span><br><span class="line">    <span class="string">"""Pure implementation of the binary search algorithm in Python.</span></span><br><span class="line"><span class="string">    :param collection: some mutable ordered collection with heterogeneous</span></span><br><span class="line"><span class="string">    :param key: the search keyword</span></span><br><span class="line"><span class="string">    :return: the replace address</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__binary_search__</span><span class="params">(collection, start, end, key)</span>:</span></span><br><span class="line">        <span class="keyword">if</span> start &gt; end:</span><br><span class="line">            <span class="keyword">return</span> start</span><br><span class="line">        mid = start + (end - start) / <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> collection[mid] &gt; key:</span><br><span class="line">            <span class="keyword">return</span> __binary_search__(collection, start, mid<span class="number">-1</span>, key)</span><br><span class="line">        <span class="keyword">if</span> collection[mid] &lt; key:</span><br><span class="line">            <span class="keyword">return</span> __binary_search__(collection, mid+<span class="number">1</span>, end, key)</span><br><span class="line">        <span class="keyword">return</span> mid+<span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> __binary_search__(collection, <span class="number">0</span>, len(collection)<span class="number">-1</span>, key)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">binary_insertion_sort</span><span class="params">(collection)</span>:</span></span><br><span class="line">    <span class="string">"""Pure implementation of the binary insertion sort algorithm in Python.</span></span><br><span class="line"><span class="string">    :param collection: some mutable ordered collection with heterogeneous</span></span><br><span class="line"><span class="string">    :return: the same collection ordered by ascending</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Examples:</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; binary_insertion_sort([0, 5, 3, 2, 2])</span></span><br><span class="line"><span class="string">    [0, 2, 2, 3, 5]</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; binary_insertion_sort([])</span></span><br><span class="line"><span class="string">    []</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; binary_insertion_sort([-2, -5, -45])</span></span><br><span class="line"><span class="string">    [-45, -5, -2]</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line">    <span class="keyword">for</span> loop_index <span class="keyword">in</span> range(<span class="number">1</span>, len(collection)):</span><br><span class="line">        insert_point = binary_search(collection[<span class="number">0</span>:loop_index], collection[loop_index])</span><br><span class="line">        <span class="keyword">if</span> insert_point == loop_index:</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        collection = (collection[<span class="number">0</span>:insert_point]</span><br><span class="line">            + [collection[loop_index]]</span><br><span class="line">            + collection[insert_point:loop_index]</span><br><span class="line">            + collection[loop_index+<span class="number">1</span>:])</span><br><span class="line">    <span class="keyword">return</span> collection</span><br></pre></td></tr></table></figure></li><li><p>Conclusion:</p></li></ul><h3 id="Binary-merge-sort"><a href="#Binary-merge-sort" class="headerlink" title="Binary merge sort"></a>Binary merge sort</h3><ul><li><p>Description:<br>  选择中间的数，把数组对半划分。分别对<code>子问题a</code>和<code>子问题b</code>进行排序，最后把这两个排好序的问题综合到一个问题。</p></li><li><p>Algorithm:</p>  <figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">merge_sort</span><span class="params">(collection)</span>:</span></span><br><span class="line">    <span class="string">"""Pure implementation of the merge sort algorithm in Python</span></span><br><span class="line"><span class="string">    :param collection: some mutable ordered collection with heterogeneous</span></span><br><span class="line"><span class="string">    comparable items inside</span></span><br><span class="line"><span class="string">    :return: the same collection ordered by ascending</span></span><br><span class="line"><span class="string">    Examples:</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; merge_sort([0, 5, 3, 2, 2])</span></span><br><span class="line"><span class="string">    [0, 2, 2, 3, 5]</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; merge_sort([])</span></span><br><span class="line"><span class="string">    []</span></span><br><span class="line"><span class="string">    &gt;&gt;&gt; merge_sort([-2, -5, -45])</span></span><br><span class="line"><span class="string">    [-45, -5, -2]</span></span><br><span class="line"><span class="string">    """</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">merge</span><span class="params">(left, right)</span>:</span></span><br><span class="line">        <span class="string">"""merge left and right</span></span><br><span class="line"><span class="string">        :param left: left collection</span></span><br><span class="line"><span class="string">        :param right: right collection</span></span><br><span class="line"><span class="string">        :return: merge result</span></span><br><span class="line"><span class="string">        """</span></span><br><span class="line">        result = []</span><br><span class="line">        <span class="keyword">while</span> left <span class="keyword">and</span> right:</span><br><span class="line">            result.append((left <span class="keyword">if</span> left[<span class="number">0</span>] &lt;= right[<span class="number">0</span>] <span class="keyword">else</span> right).pop(<span class="number">0</span>))</span><br><span class="line">        <span class="keyword">return</span> result + left + right</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> len(collection) &lt;= <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> collection</span><br><span class="line">    mid = len(collection) // <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> merge(merge_sort(collection[:mid]), merge_sort(collection[mid:]))</span><br></pre></td></tr></table></figure></li><li><p>Conclusion:</p></li></ul><h3 id="How-to-find-the-middle-element-of-a-linked-list"><a href="#How-to-find-the-middle-element-of-a-linked-list" class="headerlink" title="How to find the middle element of a linked list"></a>How to find the middle element of a linked list</h3><ul><li><p>Description:<br>  现有一个不知长度的链表，如何找到中间结点。</p></li><li><p>Algorithm:</p></li></ul><h3 id="git-bisect"><a href="#git-bisect" class="headerlink" title="git bisect"></a>git bisect</h3><ul><li><p>Description:<br>  Use binary search to find the commit that introduced a bug.</p><p>  This command uses a binary search algorithm to find which commit in your project’s history introduced a bug. You use it by first telling it a “bad” commit that is known to contain the bug, and a “good” commit that is known to be before the bug was introduced. Then git bisect picks a commit between those two endpoints and asks you whether the selected commit is “good” or “bad”. It continues narrowing down the range until it finds the exact commit that introduced the change.</p><p>  In fact, git bisect can be used to find the commit that changed any property of your project; e.g., the commit that fixed a bug, or the commit that caused a benchmark’s performance to improve. To support this more general usage, the terms “old” and “new” can be used in place of “good” and “bad”, or you can choose your own terms. See section “Alternate terms” below for more information.</p></li><li><p>Usages:</p>  <figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git bisect</span><br><span class="line">    start  <span class="comment"># to start our bug or fix binary search session</span></span><br><span class="line">    bad  <span class="comment"># to claim the bad commit end</span></span><br><span class="line">    good  <span class="comment"># to claim the good commit start</span></span><br><span class="line">    reset  <span class="comment"># to reset search session</span></span><br><span class="line"></span><br><span class="line">    ...  <span class="comment"># use `git bisect --help` to find more details</span></span><br></pre></td></tr></table></figure></li><li><p>An example:<br>  现有一个如下 <code>git log</code> 的示例项目，假设项目中出现 <code>bug</code> 字符串的是有问题的，利用 <code>git bisect</code> 找到是哪个提交导致的这个问题的。<br>  <img src="git-bisect-sample-project.png" alt="sample project git log"></p><p>  查找流程：<br>  <img src="git-bisect-operations.png" alt="git bisect operations"></p></li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol><li><a href="https://en.wikipedia.org/wiki/Bisection_method" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Bisection_method</a></li><li><a href="https://en.wikipedia.org/wiki/Merge_sort" target="_blank" rel="noopener">https://en.wikipedia.org/wiki/Merge_sort</a></li><li><a href="https://github.com/TheAlgorithms/Python" target="_blank" rel="noopener">https://github.com/TheAlgorithms/Python</a></li><li><a href="https://zh.wikipedia.org/wiki/二分搜尋演算法" target="_blank" rel="noopener">https://zh.wikipedia.org/wiki/二分搜尋演算法</a></li><li><a href="https://baroni.tech/blog/git-bisect/" target="_blank" rel="noopener">https://baroni.tech/blog/git-bisect/</a></li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;A-sample&quot;&gt;&lt;a href=&quot;#A-sample&quot; class=&quot;headerlink&quot; title=&quot;A sample&quot;&gt;&lt;/a&gt;A sample&lt;/h2&gt;&lt;p&gt;在聚餐的酒席上，我们经常会玩一个游戏，随机一人写下0到100间的一个数字N，其他人轮流报一个数字，让区间逐步逼近数字N，直到叫到N的人喝酒。其中会有人去中间数字快速缩小范围。&lt;/p&gt;
&lt;h2 id=&quot;Definition&quot;&gt;&lt;a href=&quot;#Definition&quot; class=&quot;headerlink&quot; title=&quot;Definition&quot;&gt;&lt;/a&gt;Definition&lt;/h2&gt;&lt;p&gt;对于区间[a，b]上连续不断且f（a）·f（b）&amp;lt;0的函数y=f（x），通过不断地把函数f（x）的零点所在的区间一分为二，使区间的两个端点逐步逼近零点，进而得到零点近似值的方法叫二分法。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="algorithm" scheme="http://www.slicloud.com:38876/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>How to Setup OpenVPN on the iPhone</title>
    <link href="http://www.slicloud.com:38876/2019/09/30/How_to_Setup_OpenVPN_on_the_iPhone/"/>
    <id>http://www.slicloud.com:38876/2019/09/30/How_to_Setup_OpenVPN_on_the_iPhone/</id>
    <published>2019-09-30T12:41:00.000Z</published>
    <updated>2020-03-23T10:01:49.944Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Background"><a href="#Background" class="headerlink" title="Background"></a>Background</h2><p>This lesson demonstrates how to configure the iOS OpenVPN client to authenticate with certificates and configure the SOCKS proxy.</p><h2 id="Prerequisites"><a href="#Prerequisites" class="headerlink" title="Prerequisites"></a>Prerequisites</h2><ul><li>Device with iOS 9.0 and up</li><li>Internet connectivity and Apple ID to access App Store and download OpenVPN application.</li><li>Hosted a .pac file on a Web Server</li></ul><blockquote><p>On iOS is possible to create TUN tunnels only, as TAP tunnels are not supported by the operating system itself. For more information, please refer to <a href="https://docs.openvpn.net/connecting/connecting-to-access-server-with-apple-ios/faq-regarding-openvpn-connect-ios/#Why_doesnt_the_app_support_tap-style_tunnels" target="_blank" rel="noopener">OpenVPN iOS client FAQs</a>. The <a href="https://help.endian.com/hc/it/articles/218145318-Set-up-of-a-VPN-Server-Instance" target="_blank" rel="noopener">OpenVPN server instance</a> has to be configured to use TUN device.</p></blockquote><h2 id="Step-by-Step-Tutorial"><a href="#Step-by-Step-Tutorial" class="headerlink" title="Step by Step Tutorial"></a>Step by Step Tutorial</h2><h3 id="OpenVPN-Connect-Setup"><a href="#OpenVPN-Connect-Setup" class="headerlink" title="OpenVPN Connect Setup"></a>OpenVPN Connect Setup</h3><ol><li><p>Open iTunes on your computer, connect your iPhone or iPad, click on “File Sharing” and select “OpenVPN”. Then click on “Add…”.<br><img src="openvpn-0.png" alt="upload successful"><br></p></li><li><p>Download the <a href="https://member.hide.me/en/server-status" target="_blank" rel="noopener">OpenVPN configuration file</a>, unzip it and select the .ovpn file. Then click on “Add”.<br><img src="openvpn-1.png" alt="upload successful"><br></p></li><li><p>Install the profile in OpenVPN Connect, for that click on the green plus button.<br><img src="openvpn-2.png" alt="upload successful"><br></p></li><li><p>Enter your login credentials and click on the “Add” button. Optionally you can save your password.<br><img src="openvpn-3.png" alt="upload successful"><br>A dialog window will open asking you to allow the OpenVPN iOS application to add a VPN configuration to the system. This is a default warning message advising you that your network connection will be redirected over the VPN and you can safely tap “Allow”.<br><img src="openvpn-4.png" alt="upload successful"><br></p></li><li><p>When activating the connection, a dialog window will ask you to confirm that you want to enable the connection to VPN. Confirm with “Yes”.<br><img src="openvpn-5.png" alt="upload successful"><br></p></li><li><p>If connection has been successfully established, the status is shown in the menu bar. You can manage your VPN connection with the OpenVPN app.<br><img src="openvpn-6.png" alt="upload successful"><br></p></li><li><p>Afterwards you can easily access that profile by clicking on “OVPN Profile” in “OpenVPN Connect” app.<br><img src="openvpn-7.png" alt="upload successful"><br></p></li></ol><h3 id="SOCKS-proxy-Setup"><a href="#SOCKS-proxy-Setup" class="headerlink" title="SOCKS proxy Setup"></a>SOCKS proxy Setup</h3><ol><li><p>Open up <strong>settings &gt; wifi</strong>.</p></li><li><p>Click on the <strong>blue arrow</strong> next to your wifi connection.</p></li><li><p>Scroll to the bottom where there is a section for <strong>HTTP Proxy</strong>.</p></li><li><p>Select <strong>Auto</strong> from this section.</p></li><li><p>In the URL field, key in the URL of the *.pac file you created and made web-accessible.</p></li></ol><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol><li><p><a href="https://en.wikipedia.org/wiki/OpenVPN" target="_blank" rel="noopener">OpenVPN</a></p></li><li><p><a href="https://en.wikipedia.org/wiki/SOCKS" target="_blank" rel="noopener">SOCKS</a></p></li><li><p><a href="https://en.wikipedia.org/wiki/Proxy_auto-config" target="_blank" rel="noopener">Proxy_auto-config</a></p></li><li><p><a href="http://www.capjsj.cn/ios_openvpn.html" target="_blank" rel="noopener">如何下载OpenVPN</a></p></li><li><p><a href="https://www.amsys.co.uk/how-to-use-a-pac-file-in-ios/" target="_blank" rel="noopener">How To Use a .pac File in iOS</a></p></li><li><p><a href="https://hide.me/en/vpnsetup/ios/openvpn/" target="_blank" rel="noopener">How to Setup OpenVPN on iPad / iPhone</a></p></li><li><p><a href="https://help.endian.com/hc/it/articles/360008350974-How-to-configure-iOS-OpenVPN-client-with-certificate-authentication" target="_blank" rel="noopener">How To Configure IOS OpenVPN Client With Certificate Authentication</a></p></li><li><p><a href="https://gist.github.com/austinhappel/5614113" target="_blank" rel="noopener">How to connect an iOS device to your computer via a SOCKS proxy</a></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Background&quot;&gt;&lt;a href=&quot;#Background&quot; class=&quot;headerlink&quot; title=&quot;Background&quot;&gt;&lt;/a&gt;Background&lt;/h2&gt;&lt;p&gt;This lesson demonstrates how to config
      
    
    </summary>
    
    
      <category term="Technology application" scheme="http://www.slicloud.com:38876/categories/Technology-application/"/>
    
    
      <category term="VPN" scheme="http://www.slicloud.com:38876/tags/VPN/"/>
    
      <category term="PROXY" scheme="http://www.slicloud.com:38876/tags/PROXY/"/>
    
      <category term="SOCKS" scheme="http://www.slicloud.com:38876/tags/SOCKS/"/>
    
      <category term="IOS" scheme="http://www.slicloud.com:38876/tags/IOS/"/>
    
  </entry>
  
  <entry>
    <title>Contribute</title>
    <link href="http://www.slicloud.com:38876/2019/09/29/contribute/"/>
    <id>http://www.slicloud.com:38876/2019/09/29/contribute/</id>
    <published>2019-09-29T12:11:11.000Z</published>
    <updated>2020-03-23T10:01:49.944Z</updated>
    
    <content type="html"><![CDATA[<p>This guide is a comprehensive resource for contribute to <a href="https://github.com/iweshare/weshare" target="_blank" rel="noopener">weshare</a> - for both new and experienced contributors. If you got any good ideas, I welcome your contributions to weshare.</p><a id="more"></a><h2 id="Quick-Reference"><a href="#Quick-Reference" class="headerlink" title="Quick Reference"></a>Quick Reference</h2><p>Here are the basic steps needed to get set up and contribute a patch. This is meant as a checklist, once you know the basics. For complete instructions please see the about page.</p><ol><li><p>Install and set up <code>git</code> and other dependencies (see the about page for detailed information).</p></li><li><p>Fork the <a href="https://github.com/iweshare/weshare" target="_blank" rel="noopener">weshare</a> repository to your GitHub account and get the source code using.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/&lt;your_username&gt;/weshare</span><br><span class="line">$ <span class="built_in">cd</span> weshare</span><br></pre></td></tr></table></figure></li><li><p>Install project node denpendencies:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br></pre></td></tr></table></figure></li><li><p>Run:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm run start</span><br></pre></td></tr></table></figure></li><li><p>Browser the website <a href="http://localhost:4000/weshare" target="_blank" rel="noopener"><code>http://localhost:4000/weshare</code></a> to check the blog.</p></li></ol><h2 id="Create-Your-Post"><a href="#Create-Your-Post" class="headerlink" title="Create Your Post"></a>Create Your Post</h2><p>I recommend to use <a href="https://www.markdownguide.org/cheat-sheet/" target="_blank" rel="noopener">markdown</a> to write the post, and all the site’s posts are using markdown. Next, I will show you how to create your post. Let’s dive into the details.</p><ol><li><p>Use <code>hexo</code> command to create post:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new &lt;your_post_title_name&gt;</span><br></pre></td></tr></table></figure><p>After the command executed sucessfully, you can see <your_post_title_name>.md and the same name folder under the path `/source/_posts/‘. Edit your post content in the markdown file, <your_post_title_name>.md, and once image or other file needed, put them under the same name folder as the post.</your_post_title_name></your_post_title_name></p></li><li><p>Create commit and push it.</p><blockquote><p>Before you create commit, you need to generate static files first by using the following command.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm run docs</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git add . &amp;&amp; git commit -m <span class="string">'Add a new post, &lt;your_post_title_name&gt;'</span></span><br><span class="line">$ git push -u origin master <span class="comment"># make sure that the current branch is the lastest.</span></span><br></pre></td></tr></table></figure></li><li><p>Create pull request to the <a href="https://github.com/iweshare/weshare" target="_blank" rel="noopener">origin repository</a>. This is a basic usage of GitHub, I will not show the details.<br><strong>I wish you do sync step to make your repository is the latest to the origin repository.</strong></p></li></ol><p><strong>Good Luck!</strong></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;This guide is a comprehensive resource for contribute to &lt;a href=&quot;https://github.com/iweshare/weshare&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;weshare&lt;/a&gt; - for both new and experienced contributors. If you got any good ideas, I welcome your contributions to weshare.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>About</title>
    <link href="http://www.slicloud.com:38876/2019/09/15/About/"/>
    <id>http://www.slicloud.com:38876/2019/09/15/About/</id>
    <published>2019-09-15T14:49:13.000Z</published>
    <updated>2020-03-23T10:01:49.940Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="/weshare/">WeShare</a>! This is a fantastic awesome place where you can gain our computing experience conclusion and of course you could share your great thing with us by posting to the <a href="https://github.com/imuxin/weshare" target="_blank" rel="noopener">repository</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Prerequisite"><a href="#Prerequisite" class="headerlink" title="Prerequisite"></a>Prerequisite</h3><p>You need <code>git</code>, <code>node</code> installed on your operation system. Here, I will not give the documentation of installation. I believe that You can achieve the installation by yourself.</p><div class="tip">    The website is powered by <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>. Hexo is a fast, simple and powerful blog framework. You could get some more detail from the Hexo <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a>, if you want to be an expert. If you encounter any problems when using Hexo, have a look at the <a href="https://hexo.io/docs/troubleshooting" target="_blank" rel="noopener">troubleshooting guide</a>.</div><h3 id="Install-Hexo"><a href="#Install-Hexo" class="headerlink" title="Install Hexo"></a>Install Hexo</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h3 id="Clone-the-project-and-install-requirements"><a href="#Clone-the-project-and-install-requirements" class="headerlink" title="Clone the project and install requirements"></a>Clone the project and install requirements</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git <span class="built_in">clone</span> https://github.com/iweshare/weshare.git</span><br><span class="line">$ <span class="built_in">cd</span> weshare &amp;&amp; npm install</span><br></pre></td></tr></table></figure><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><blockquote><p>The command running result will be like this: <img src="cmd_hexo_server.png" alt="cmd_hexo_server"></p></blockquote><blockquote><p>The result in the browser: <img src="home.png" alt="home"></p></blockquote><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Hexo Server</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;/weshare/&quot;&gt;WeShare&lt;/a&gt;! This is a fantastic awesome place where you can gain our computing experience conclusion and of course you could share your great thing with us by posting to the &lt;a href=&quot;https://github.com/imuxin/weshare&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;repository&lt;/a&gt;.&lt;/p&gt;
    
    </summary>
    
    
    
  </entry>
  
</feed>
